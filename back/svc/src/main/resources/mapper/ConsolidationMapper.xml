<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teamex.svc.mapper.ConsolidationMapper">

<!-- ## Consolidation Report ## -->

  <!-- EVC Consolidation Report  --> 
  <select id="selectEVC" parameterType="Map" resultType="Consolidation_EVC">
    select a.transaction_no || b.seq || c.transaction_no || c.seq || f.reportno || f.seq   as id,
           p.edi_fg                     as CPO,
           a.fiscal_period              as case_fiscal_period,
           a.transaction_date           as case_transaction_date,
           a.transaction_no             as case_number, 
           a.transaction_status         as case_status,
           a.site_cd                    as site_cd,
           b.station_id                 as station_id,
           b.seq                        as case_sequence,
           b.product_cd                 as product_cd,
           b.model_no                   as model_no,
           p.memo                       as gen_type,
           p.name                       as site_name,
           p.address1 || p.address2     as address,
           p.city                       as city,
           p.state_cd                   as state_cd,
           p.zip_cd                     as zip_cd,
           p.country_cd                 as country_cd,
           decode(p.e_mail,'Y','Y','N') as teamex_coverage,
           q.upload_date                as commissioned_date,
           svc.f_get_station_aging (to_date(#{date_fr},'mm/dd/yyyy'), 
                                    to_date(#{date_to},'mm/dd/yyyy'), 
                                    q.upload_date)  as station_aging,
           a.elam_no                    as elam_no,
           d.transaction_type           as work_type,
           nvl(a.elam_date, a.transaction_date)                  as case_date, 
           to_char(nvl(a.elam_date, a.transaction_date),'mm')    as case_month,
           to_char(nvl(a.elam_date, a.transaction_date),'yyyy')  as case_year,
           a.issuedby                   as issuedby,
           a.create_id                  as create_id, 
           o.fname || ' ' || o.lname    as creator,
           a.create_date                as create_date,
           b.update_id                  as update_id,
           b.update_date                as update_date,
           a.response_date              as response_date,
           b.confirm_id                 as confirm_id,
           b.confirm_date               as confirm_date,
           a.warranty_yn                as warranty_yn,
           a.cycle                      as cycle,
           a.priority                   as priority,
           svc.no_biz_hours(decode(substr(a.transaction_no,11,1),'A','EA','V','EVGO','AG'),a.elam_date, a.response_date) AS response_time,
           case when b.check_out is not null then to_char(round(b.check_out - a.response_date, 2))
                when nvl(b.visit_yn,'N') = 'Y' then 'Needs visit'
                when nvl(b.visit_yn,'N') = 'N' then 'No need to visit'
           end    as stat_days,
           round((b.check_out - a.response_date) * 24 , 2) as stat_hours,
           b.symptom                    as symptom,
           b.teamviewer                 as teamviewer,
           b.exp_reason                 as exp_reason,
           b.instruction                as instruction,
           b.close_fg                   as close_fg,
           b.exp_reason_cd              as exp_reason_cd,
           decode(g.sow, null, f.action_detail, g.sow)   as work_done,
           b.visit_dt                   as case_visit_dt,
           b.check_out                  as check_out,
           b.use_part1                  as use_part1,
           b.use_part1_qty              as use_part1_qty,
           b.use_part2                  as use_part2,
           b.use_part2_qty              as use_part2_qty,
           b.use_part3                  as use_part3,
           b.use_part3_qty              as use_part3_qty,
           b.symptom_cd                 as symptom_cd,
           r.description                as symptom_desc,
           b.repair_cd                  as repair_cd,
           s.description                as action_taken,
           b.warranty_cd                as warranty_cd,
           b.visit_yn                   as visit_yn,
           b.repaired_by                as tech_company,
           a.phone                      as phone,
           b.support                    as support,
           b.pending_issue              as pending_issue,
           b.root_cause                 as root_cause,
           round(svc.no_biz_hours(decode(substr(a.transaction_no,11,1),'A','EA','V','EVGO','AG'),a.elam_date, e.visit_dt) / 24 , 2) AS RTAT,
           d.transaction_no             as fs_no,
           d.transaction_type           as work_order_type,
           d.transaction_status         as fs_status,
           d.transaction_date           as fs_creation_date,
           d.fiscal_period              as fs_fiscal_period,
           d.client_cd                  as client_cd,
           d.cust_cd                    as cust_cd,
           b.work_order                 as work_order,
           d.available_date             as plan_date,
           d.start_date                 as dispatch_date,
           b.tech_nm                    as case_tech,
           d.technician                 as technician,
           d.numberoftech               as tech_count,
           d.car1_id                    as car1_id,
           d.car2_id                    as car2_id,
           e.reportno                   as fr_no,
           e.report_sts                 as fr_status,
           e.tran_date                  as tran_date,
           e.ev_car                     as ev_car,
           e.bill_to_cust               as bill_to_cust,
           e.state                      as state,
           e.zip                        as zip,
           round((nvl((e.wt_co1 - e.wt_ci1),0) 
                + nvl((e.wt_co2 - e.wt_ci2),0) 
                + nvl((e.wt_co3 - e.wt_ci3),0) 
                + nvl((e.wt_co4 - e.wt_ci4),0)  
                + nvl((e.wt_co5 - e.wt_ci5),0)) *24,2) as total_workhour,
           case when 
              (( nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 1 then '~1 hr'
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 2 then '1~2 hrs'
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 3 then '2~3 hrs' 
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 4 then '3~4 hrs' 
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ > ]]> 4 then '4 hrs~'  end as workhour_range,
           e.visit_dt                   as visit_dt,
           e.wt_ci1                     as check_in_1,
           e.wt_co1                     as check_out_1,
           e.wt_ci2                     as check_in_2,
           e.wt_co2                     as check_out_2,
           e.wt_ci3                     as check_in_3,
           e.wt_co3                     as check_out_3,
           e.wt_ci4                     as check_in_4,
           e.wt_co4                     as check_out_4,
           e.wt_ci5                     as check_in_5,
           e.wt_co5                     as check_out_5,
           e.hotel_amt                  as hotel_amt,
           e.mileage                    as mileage,
           e.rental_amt                 as rental_amt,
           e.others_amt                 as others_amt,
           e.fiscal_period              as billing_fiscal_period,
           e.create_dt                  as create_dt,
           null                         as date_from,
           null                         as date_to,
           e.cust_cd                    as cust_name,
           ''                           as client_name,
           e.mileage                    as total_mileage_fee,
           0                            as total_labor_fee, 
           e.hotel_amt                  as total_hotel_fee,
           e.rental_amt                 as total_rental,
           0                            as others,
           e.others_amt                 as total_others
      from svc.cctraneh a
        left outer join svc.cctranel b on b.div = a.div and b.transaction_no = a.transaction_no
        left outer join svc.fstranel c on c.div = b.div and c.case_no = b.transaction_no and c.case_seq = b.seq
        left outer join svc.fstraneh d on d.div = c.div and d.transaction_no = c.transaction_no
        left outer join svc.sitevrhd e on e.div = d.div and e.fs_no = d.transaction_no
        left outer join svc.sitevrdt f on f.div = e.div and f.reportno = e.reportno and f.seq = c.seq
        left outer join svc.fssowmsg g on g.div = b.div and g.transaction_no = b.transaction_no and g.wo_no = b.work_order
        left outer join svc.msuserms o on o.div = a.div and o.user_id = a.create_id
        left outer join svc.mssitems p on p.div = a.div and p.site_cd = a.site_cd
        left outer join svc.qttraneh q on q.div = a.div and q.site_cd = a.site_cd and q.transaction_status in ('B','C')
        left outer join svc.mspdrcms r on r.div = a.div and r.code_type = 'DEFECT' and r.code = b.symptom_cd
        left outer join svc.mspdrcms s on s.div = a.div and s.code_type = 'REPAIR' and s.code = b.repair_cd
     where a.div = #{div}
       and a.transaction_status not in ('V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     order by a.transaction_date desc, a.transaction_no desc, b.seq
  </select>
  
  <!-- EVC Part Usage Report  --> 
  <select id="selectEVCPart" parameterType="Map" resultType="Consolidation_EVC">
    select a.transaction_no || b.seq || c.transaction_no || c.seq || f.reportno || f.seq || b1.r_seq  as id,
           b1.use_part                  as use_part,
           b1.use_part_qty              as use_part_qty,
           r.part_name                  as part_name,
           r.part_desc                  as part_desc,
           p.edi_fg                     as CPO,
           a.fiscal_period              as case_fiscal_period,
           a.transaction_date           as case_transaction_date,
           a.transaction_no             as case_number, 
           a.transaction_status         as case_status,
           a.site_cd                    as site_cd,
           b.station_id                 as station_id,
           b.seq                        as case_sequence,
           b.product_cd                 as product_cd,
           b.model_no                   as model_no,
           p.memo                       as gen_type,
           p.name                       as site_name,
           p.address1 || p.address2     as address,
           p.city                       as city,
           p.state_cd                   as state_cd,
           p.zip_cd                     as zip_cd,
           p.country_cd                 as country_cd,
           decode(p.e_mail,'Y','Y','N') as teamex_coverage,
           q.upload_date                as commissioned_date,
           svc.f_get_station_aging (to_date(#{date_fr},'mm/dd/yyyy'), 
                                    to_date(#{date_to},'mm/dd/yyyy'), 
                                    q.upload_date)  as station_aging,
           a.elam_no                    as elam_no,
           d.transaction_type           as work_type,
           nvl(a.elam_date, a.transaction_date)                  as case_date, 
           to_char(nvl(a.elam_date, a.transaction_date),'mm')    as case_month,
           to_char(nvl(a.elam_date, a.transaction_date),'yyyy')  as case_year,
           a.issuedby                   as issuedby,
           a.create_id                  as create_id, 
           o.fname || ' ' || o.lname    as creator,
           a.create_date                as create_date,
           b.update_id                  as update_id,
           b.update_date                as update_date,
           a.response_date              as response_date,
           b.confirm_id                 as confirm_id,
           b.confirm_date               as confirm_date,
           a.warranty_yn                as warranty_yn,
           a.cycle                      as cycle,
           a.priority                   as priority,
           b.symptom                    as symptom,
           b.teamviewer                 as teamviewer,
           b.exp_reason                 as exp_reason,
           b.instruction                as instruction,
           b.close_fg                   as close_fg,
           b.exp_reason_cd              as exp_reason_cd,
           b.visit_dt                   as case_visit_dt,
           decode(g.sow, null, f.action_detail, g.sow)   as work_done,
           b.symptom_cd                 as symptom_cd,
           b.repair_cd                  as repair_cd,
           b.warranty_cd                as warranty_cd,
           b.visit_yn                   as visit_yn,
           b.repaired_by                as tech_company,
           a.phone                      as phone,
           b.support                    as support,
           b.pending_issue              as pending_issue,
           b.root_cause                 as root_cause,
           round(svc.no_biz_hours(decode(substr(a.transaction_no,11,1),'A','EA','V','EVGO','AG'),a.elam_date, e.visit_dt) / 24 , 2) AS RTAT,
           d.transaction_no             as fs_no,
           d.transaction_type           as work_order_type,
           d.transaction_status         as fs_status,
           d.transaction_date           as fs_creation_date,
           d.fiscal_period              as fs_fiscal_period,
           d.client_cd                  as client_cd,
           d.cust_cd                    as cust_cd,
           b.work_order                 as work_order,
           d.available_date             as plan_date,
           d.start_date                 as dispatch_date,
           b.tech_nm                    as case_tech,
           d.technician                 as technician,
           d.numberoftech               as tech_count,
           d.car1_id                    as car1_id,
           d.car2_id                    as car2_id,
           e.reportno                   as fr_no,
           e.report_sts                 as fr_status,
           e.tran_date                  as tran_date,
           e.ev_car                     as ev_car,
           e.bill_to_cust               as bill_to_cust,
           e.state                      as state,
           e.zip                        as zip,
           round((nvl((e.wt_co1 - e.wt_ci1),0) 
                + nvl((e.wt_co2 - e.wt_ci2),0) 
                + nvl((e.wt_co3 - e.wt_ci3),0) 
                + nvl((e.wt_co4 - e.wt_ci4),0)  
                + nvl((e.wt_co5 - e.wt_ci5),0)) *24,2) as total_workhour,
           case when 
              (( nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 1 then '~1 hr'
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 2 then '1~2 hrs'
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 3 then '2~3 hrs' 
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ <= ]]> 4 then '3~4 hrs' 
             when ((  nvl((e.wt_co1 - e.wt_ci1),0) 
               + nvl((e.wt_co2 - e.wt_ci2),0) 
               + nvl((e.wt_co3 - e.wt_ci3),0) 
               + nvl((e.wt_co4 - e.wt_ci4),0)  
               + nvl((e.wt_co5 - e.wt_ci5),0)) *24) <![CDATA[ > ]]> 4 then '4 hrs~'  end as workhour_range,
           e.visit_dt                   as visit_dt,
           e.wt_ci1                     as check_in_1,
           e.wt_co1                     as check_out_1,
           e.wt_ci2                     as check_in_2,
           e.wt_co2                     as check_out_2,
           e.wt_ci3                     as check_in_3,
           e.wt_co3                     as check_out_3,
           e.wt_ci4                     as check_in_4,
           e.wt_co4                     as check_out_4,
           e.wt_ci5                     as check_in_5,
           e.wt_co5                     as check_out_5,
           e.hotel_amt                  as hotel_amt,
           e.mileage                    as mileage,
           e.rental_amt                 as rental_amt,
           e.others_amt                 as others_amt,
           e.fiscal_period              as billing_fiscal_period,
           e.create_dt                  as create_dt,
           null                         as date_from,
           null                         as date_to,
           e.cust_cd                    as cust_name,
           ''                           as client_name,
           e.mileage                    as total_mileage_fee,
           0                            as total_labor_fee, 
           e.hotel_amt                  as total_hotel_fee,
           e.rental_amt                 as total_rental,
           0                            as others,
           e.others_amt                 as total_others
      from svc.cctraneh a
        left outer join svc.cctranel b on b.div = a.div and b.transaction_no = a.transaction_no
        left outer join 
            (select div, transaction_no, seq, r_seq, use_part, use_part_qty
               from (select div, transaction_no, seq, 
                            use_part1                  as use_part1,
                            use_part1_qty              as use_part1_qty,
                            use_part2                  as use_part2,
                            use_part2_qty              as use_part2_qty,
                            use_part3                  as use_part3,
                            use_part3_qty              as use_part3_qty
                       from svc.cctranel a
                      where div = #{div}
                        and transaction_status  not in ('V')
                        and transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
               ) UNPIVOT ((use_part, use_part_qty) FOR r_seq in 
                         ((use_part1, use_part1_qty) as 1, (use_part2, use_part2_qty) as 2, (use_part3, use_part3_qty) as 3))
        ) b1 on b1.div = b.div and b1.transaction_no = b.transaction_no and b1.seq = b.seq
        left outer join svc.fstranel c on c.div = b.div  and c.case_no = b.transaction_no and c.case_seq = b.seq
        left outer join svc.fstraneh d on d.div = c.div  and d.transaction_no = c.transaction_no
        left outer join svc.sitevrhd e on e.div = d.div  and e.fs_no = d.transaction_no
        left outer join svc.sitevrdt f on f.div = e.div  and f.reportno = e.reportno and f.seq = c.seq
        left outer join svc.fssowmsg g on g.div = b.div  and g.transaction_no = b.transaction_no and g.wo_no = b.work_order
        left outer join svc.msuserms o on o.div = a.div  and o.user_id = a.create_id
        left outer join svc.mssitems p on p.div = a.div  and p.site_cd = a.site_cd
        left outer join svc.qttraneh q on q.div = a.div  and q.site_cd = a.site_cd and q.transaction_status in ('B','C')
        left outer join svc.mspartms r on r.div = b1.div and r.part_no = b1.use_part
     where a.div = #{div}
       and a.transaction_status not in ('V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     order by a.transaction_date desc, a.transaction_no desc, b.seq
  </select>
  
  <!-- Compare WH (SWH vs AWH) Report : Visit Data --> 
  <select id="selectVisitData" parameterType="Map" resultType="Consolidation_CompWH">
    select a.transaction_no || a.seq || d.reportno || d.seq || e.transaction_no || e.seq   as id,
           a.transaction_type            as sow_type,
           case when e.transaction_date > h.close_date then 'N' else 'Y' end  as warranty_yn,
           h.loc_no                      as gen_type,
           a.site_cd                     as site_cd,
           a.station_id                  as station_id,
           b.site_name                   as site_name,
           b.address1 || b.address2      as address,
           b.city                        as city,
           b.state_cd                    as state_cd,
           b.zip_cd                      as zip_cd,
           ''                            as teamex_office,
           f.elam_no                     as elam_case,
           a.case_no                     as MFR_case, 
           trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))  as code,
           ''  as new_code,
           q.doc_name                    as description,
           nvl(q.hours, a.std_work_hours) as swh_in_dec,
           svc.f_dec_to_hhmm(nvl(q.hours, a.std_work_hours)) as swh_in_time,
           c.wt_ci1                      as check_in_1,
           c.wt_co1                      as check_out_1,
           c.wt_ci2                      as check_in_2,
           c.wt_co2                      as check_out_2,
           c.wt_ci3                      as check_in_2,
           c.wt_co3                      as check_out_3,
           c.wt_ci4                      as check_in_3,
           c.wt_co4                      as check_out_4,
           c.wt_ci5                      as check_in_5,
           c.wt_co5                      as check_out_5,
           GREATEST( round((nvl((c.wt_co1 - c.wt_ci1),0) 
                          + nvl((c.wt_co2 - c.wt_ci2),0) 
                          + nvl((c.wt_co3 - c.wt_ci3),0) 
                          + nvl((c.wt_co4 - c.wt_ci4),0)  
                          + nvl((c.wt_co5 - c.wt_ci5),0)) *24,2) -0.25, 0) as awh_in_dec,
           svc.f_dec_to_hhmm( round(GREATEST( (( nvl((c.wt_co1 - c.wt_ci1),0) 
                                               + nvl((c.wt_co2 - c.wt_ci2),0) 
                                               + nvl((c.wt_co3 - c.wt_ci3),0) 
                                               + nvl((c.wt_co4 - c.wt_ci4),0)  
                                               + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0) ,2) ) as awh_in_time,
           decode(nvl(q.hours, a.std_work_hours), 0, 0,
               round(( GREATEST( ((nvl((c.wt_co1 - c.wt_ci1),0) 
                                 + nvl((c.wt_co2 - c.wt_ci2),0) 
                                 + nvl((c.wt_co3 - c.wt_ci3),0) 
                                 + nvl((c.wt_co4 - c.wt_ci4),0)  
                                 + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0))
                                          / nvl(q.hours, a.std_work_hours) * 100 ) ) as efficiency,
           f.priority                   as priority_level,
           e.transaction_date           as case_opened_date,
           o.fname || ' ' || o.lname    as case_owner,
           d.visit_reason               as issue,
           d.part1_cd || decode(d.part2_cd, null, '', ',' || d.part2_cd) || decode(d.part3_cd, null, '',  ',' || d.part3_cd)  as recommended_parts,
           a.order_no                   as so_no,
           g.ra_no                      as RMA,
           a.wo_date                    as date_wo_released,
           a.wo_no                      as work_order,
           d.work_order                 as work_order2,
           a.transaction_no             as fs_no,
           b.technician                 as assigned_to,
           c.technician                 as assigned_fr,
           b.start_date                 as est_start_date,
           c.visit_dt                   as date_of_visit,
           case when b.start_date= null then 0 
                when a.wo_date = null then 0
                else (to_date(to_char(b.start_date,'mm/dd/yyyy'),'mm/dd/yyyy') - to_date(to_char(a.wo_date,'mm/dd/yyyy'),'mm/dd/yyyy')) end as rtat,
           e.close_fg                   as dispatch_status,
           e.pending_issue              as pending_issue,
           c.reportno                   as fr_no
       from svc.fstranel a
         left outer join svc.fstraneh b on b.div = a.div and b.transaction_no = a.transaction_no
         left outer join svc.sitevrhd c on c.div = a.div and c.fs_no = a.transaction_no
         left outer join svc.sitevrdt d on d.div = c.div and d.reportno = c.reportno and d.seq = a.seq
         left outer join svc.cctranel e on e.div = a.div and e.transaction_no = a.case_no and e.seq = a.case_seq
         left outer join svc.cctraneh f on f.div = a.div and f.transaction_no = a.case_no
         left outer join svc.sotraneh g on g.div = a.div and g.transaction_type = 'RT' and g.transaction_status not in ('V') and g.transaction_no = a.order_no
         left outer join svc.qttranel h on h.div = a.div and h.transaction_type = 'QT' and h.transaction_status not in ('V') and h.site_cd = a.site_cd and h.lot_id = a.station_id 
         left outer join svc.msuserms o on o.div = f.div and o.user_id = f.create_id
         inner join      svc.mssitems p on p.div = a.div and p.site_cd = a.site_cd and p.status in ('I', 'A') and p.edi_fg = 'A'
         left outer join svc.msstdwhr q on q.div = a.div and q.doc_code = trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))
     where a.div = #{div}
       and a.transaction_status not in ('B','V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     order by a.transaction_date, a.transaction_no, a.seq
  </select>
  
  <!-- Compare WH (SWH vs AWH) Report : Efficiency of SOW --> 
  <select id="selectEffOfSOW" parameterType="Map" resultType="Consolidation_CompWH">
    select '1'                             as lev,
           trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))  as code,
           q.doc_name                      as description,
           ''                              as assigned_to,
           count(*)                        as count_assigned_tech,
           decode(nvl(q.hours, a.std_work_hours), 0, 0,
                  round( (sum(GREATEST( ((nvl((c.wt_co1 - c.wt_ci1),0) 
                                        + nvl((c.wt_co2 - c.wt_ci2),0) 
                                        + nvl((c.wt_co3 - c.wt_ci3),0) 
                                        + nvl((c.wt_co4 - c.wt_ci4),0)  
                                        + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0)) / count(*))
                          / nvl(q.hours, a.std_work_hours) ,2) 
            ) as avg_efficiency
       from svc.fstranel a
         left outer join svc.fstraneh b on b.div = a.div and b.transaction_no = a.transaction_no
         left outer join svc.sitevrhd c on c.div = a.div and c.fs_no = a.transaction_no
         inner join      svc.mssitems p on p.div = a.div and p.site_cd = a.site_cd and p.status in ('I', 'A') and p.edi_fg = 'A'
         left outer join svc.msstdwhr q on q.div = a.div and q.doc_code = trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))
     where a.div = #{div}
       and a.transaction_status not in ('B','V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     group by trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6)), q.doc_name, nvl(q.hours, a.std_work_hours)
    union all
    select '2'                             as lev,
           trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))  as code,
           q.doc_name                      as description,
           b.technician                    as assigned_to,
           count(*)                        as count_assigned_tech,
           decode(nvl(q.hours, a.std_work_hours), 0, 0,
                  round( (sum(GREATEST( ((nvl((c.wt_co1 - c.wt_ci1),0) 
                                        + nvl((c.wt_co2 - c.wt_ci2),0) 
                                        + nvl((c.wt_co3 - c.wt_ci3),0) 
                                        + nvl((c.wt_co4 - c.wt_ci4),0)  
                                        + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0)) / count(*))
                          / nvl(q.hours, a.std_work_hours) ,2) 
            ) as avg_efficiency
       from svc.fstranel a
         left outer join svc.fstraneh b on b.div = a.div and b.transaction_no = a.transaction_no
         left outer join svc.sitevrhd c on c.div = a.div and c.fs_no = a.transaction_no
         inner join      svc.mssitems p on p.div = a.div and p.site_cd = a.site_cd and p.status in ('I', 'A') and p.edi_fg = 'A'
         left outer join svc.msstdwhr q on q.div = a.div and q.doc_code = trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))
     where a.div = #{div}
       and a.transaction_status not in ('B','V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     group by trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6)), q.doc_name, nvl(q.hours, a.std_work_hours), b.technician 
     order by code, lev, assigned_to
  </select>
  
  <!-- Compare WH (SWH vs AWH) Report : PV Analysis -->
  <select id="selectPvAnalysis" parameterType="Map" resultType="Consolidation_CompWH">
    select trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))  as code,
           q.doc_name                      as description,
           b.technician                    as assigned_to,
           count(*)                        as count_assigned_tech,
           nvl(q.hours, a.std_work_hours)  as swh_in_dec,
           round( sum(GREATEST( ((nvl((c.wt_co1 - c.wt_ci1),0) 
                                + nvl((c.wt_co2 - c.wt_ci2),0) 
                                + nvl((c.wt_co3 - c.wt_ci3),0) 
                                + nvl((c.wt_co4 - c.wt_ci4),0)  
                                + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0)) / count(*) , 2) as avg_awh_in_dec,
           count(b.technician)             as count_wo,
           decode(nvl(q.hours, a.std_work_hours), 0, 0,
                  round( (sum(GREATEST( ((nvl((c.wt_co1 - c.wt_ci1),0) 
                                        + nvl((c.wt_co2 - c.wt_ci2),0) 
                                        + nvl((c.wt_co3 - c.wt_ci3),0) 
                                        + nvl((c.wt_co4 - c.wt_ci4),0)  
                                        + nvl((c.wt_co5 - c.wt_ci5),0)) *24) -0.25, 0)) / count(*))
                          / nvl(q.hours, a.std_work_hours) ,2) 
            ) as avg_efficiency
       from svc.fstranel a
         left outer join svc.fstraneh b on b.div = a.div and b.transaction_no = a.transaction_no
         left outer join svc.sitevrhd c on c.div = a.div and c.fs_no = a.transaction_no
         inner join      svc.mssitems p on p.div = a.div and p.site_cd = a.site_cd and p.status in ('I', 'A') and p.edi_fg = 'A'
         left outer join svc.msstdwhr q on q.div = a.div and q.doc_code = trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6))
     where a.div = #{div}
       and a.transaction_status not in ('B','V')
       and a.transaction_date <![CDATA[ >= ]]> to_date(#{date_fr},'mm/dd/yyyy') and a.transaction_date <![CDATA[ < ]]> to_date(#{date_to},'mm/dd/yyyy')+1
     group by trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6)), q.doc_name, nvl(q.hours, a.std_work_hours), b.technician 
     order by trim(regexp_substr(regexp_substr(a.sow_file, '[^-]+'), '[^\]+', 1,6)), b.technician
  </select>

</mapper>